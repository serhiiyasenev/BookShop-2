name: .NET Build and Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration Release
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args:
            -Dsonar.projectKey=serhiiyasenev_BookShop-2
            -Dsonar.organization=serhiiyasenev
      - name: Test
        run: dotnet test --no-build --verbosity normal --configuration Release --collect:"XPlat Code Coverage" --logger trx --results-directory coverage
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3

  coverage:
    needs: build-and-test
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@5.1.17
        with:
          reports: 'coverage/*/coverage.cobertura.xml'
          targetdir: 'coveragereport'
          reporttypes: 'HtmlChart;HtmlInline;Cobertura'
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coveragereport/Cobertura.xml
          badge: true
          format: 'markdown'
          output: 'both'
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v3
        with:
          name: CoverageReport
          path: coveragereport

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        run: |
          echo "Deploying your app"